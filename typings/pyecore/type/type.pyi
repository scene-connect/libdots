"""
This type stub file was generated by pyright.
"""

from collections import UserDict
from collections import UserList

from pyecore.ecore import EDerivedCollection
from pyecore.ecore import EObject
from pyecore.ecore import MetaEClass

"""Definition of meta model 'type' for XMLTypes."""
name = ...
nsURI = ...
nsPrefix = ...
eClass = ...
eClassifiers = ...
getEClassifier = ...
AnySimpleType = ...
AnyURI = ...
Base64Binary = ...
Boolean = ...
BooleanObject = ...
Byte = ...
ByteObject = ...
Date = ...
DateTime = ...
Decimal = ...
Double = ...
DoubleObject = ...
Duration = ...
ENTITIES = ...
ENTITIESBase = ...
ENTITY = ...
Float = ...
FloatObject = ...
GDay = ...
GMonth = ...
GMonthDay = ...
GYear = ...
GYearMonth = ...
HexBinary = ...
ID = ...
IDREF = ...
IDREFS = ...
IDREFSBase = ...
Int = ...
Integer = ...
IntObject = ...
Language = ...
Long = ...
LongObject = ...
Name = ...
NCName = ...
NegativeInteger = ...
NMTOKEN = ...
NMTOKENS = ...
NMTOKENSBase = ...
NonNegativeInteger = ...
NonPositiveInteger = ...
NormalizedString = ...
NOTATION = ...
PositiveInteger = ...
QName = ...
Short = ...
ShortObject = ...
String = ...
Time = ...
Token = ...
UnsignedByte = ...
UnsignedByteObject = ...
UnsignedInt = ...
UnsignedIntObject = ...
UnsignedLong = ...
UnsignedShort = ...
UnsignedShortObject = ...
class DerivedAny(UserDict, EDerivedCollection):
    def __init__(self, owner, feature=...) -> None:
        ...



class AnyType(EObject, metaclass=MetaEClass):
    mixed = ...
    any = ...
    anyAttribute = ...
    def __init__(self, *, mixed=..., any=..., anyAttribute=..., **kwargs) -> None:
        ...



class ProcessingInstruction(EObject, metaclass=MetaEClass):
    data = ...
    target = ...
    def __init__(self, *, data=..., target=..., **kwargs) -> None:
        ...



class DerivedCdata(UserList, EDerivedCollection):
    def __init__(self, owner, feature=...) -> None:
        ...



class DerivedComment(UserList, EDerivedCollection):
    def __init__(self, owner, feature=...) -> None:
        ...



class DerivedProcessinginstruction(UserList, EDerivedCollection):
    def __init__(self, owner, feature=...) -> None:
        ...



class DerivedText(UserList, EDerivedCollection):
    def __init__(self, owner, feature=...) -> None:
        ...



class XMLTypeDocumentRoot(EObject, metaclass=MetaEClass):
    mixed = ...
    cDATA = ...
    comment = ...
    text = ...
    xMLNSPrefixMap = ...
    xSISchemaLocation = ...
    processingInstruction = ...
    def __init__(self, *, mixed=..., xMLNSPrefixMap=..., xSISchemaLocation=..., cDATA=..., comment=..., processingInstruction=..., text=..., **kwargs) -> None:
        ...



class SimpleAnyType(AnyType):
    _rawValue = ...
    _value = ...
    instanceType = ...
    @property
    def rawValue(self): # -> EAttribute | EBag | ESet | EDerivedCollection | EList | EOrderedSet:
        ...

    @rawValue.setter
    def rawValue(self, value): # -> None:
        ...

    @property
    def value(self): # -> EAttribute | EBag | ESet | EDerivedCollection | EList | EOrderedSet:
        ...

    @value.setter
    def value(self, value): # -> None:
        ...

    def __init__(self, *, rawValue=..., value=..., instanceType=..., **kwargs) -> None:
        ...
