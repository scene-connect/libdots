"""
This type stub file was generated by pyright.
"""

from google.auth import transport

"""Transport adapter for http.client, for internal use only."""
_LOGGER = ...
class Response(transport.Response):
    """http.client transport response adapter.

    Args:
        response (http.client.HTTPResponse): The raw http client response.
    """
    def __init__(self, response) -> None:
        ...

    @property
    def status(self):
        ...

    @property
    def headers(self): # -> dict[Any, Any]:
        ...

    @property
    def data(self):
        ...



class Request(transport.Request):
    """http.client transport request adapter."""
    def __call__(self, url, method=..., body=..., headers=..., timeout=..., **kwargs): # -> Response:
        """Make an HTTP request using http.client.

        Args:
            url (str): The URI to be requested.
            method (str): The HTTP method to use for the request. Defaults
                to 'GET'.
            body (bytes): The payload / body in HTTP request.
            headers (Mapping): Request headers.
            timeout (Optional(int)): The number of seconds to wait for a
                response from the server. If not specified or if None, the
                socket global default timeout will be used.
            kwargs: Additional arguments passed throught to the underlying
                :meth:`~http.client.HTTPConnection.request` method.

        Returns:
            Response: The HTTP response.

        Raises:
            google.auth.exceptions.TransportError: If any exception occurred.
        """
        ...
