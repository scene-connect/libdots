"""
This type stub file was generated by pyright.
"""

"""
Code for configuring client side TLS to offload the signing operation to
signing libraries.
"""
_LOGGER = ...
SIGN_CALLBACK_CTYPE = ...
def load_offload_lib(offload_lib_path): # -> CDLL:
    ...

def load_signer_lib(signer_lib_path): # -> CDLL:
    ...

def load_provider_lib(provider_lib_path): # -> CDLL:
    ...

def get_sign_callback(signer_lib, config_file_path): # -> _FuncPointer:
    ...

def get_cert(signer_lib, config_file_path): # -> bytes:
    ...

class CustomTlsSigner:
    def __init__(self, enterprise_cert_file_path) -> None:
        """
        This class loads the offload and signer library, and calls APIs from
        these libraries to obtain the cert and a signing callback, and attach
        them to SSL context. The cert and the signing callback will be used
        for client authentication in TLS handshake.

        Args:
            enterprise_cert_file_path (str): the path to a enterprise cert JSON
                file. The file should contain the following field:

                    {
                        "libs": {
                            "ecp_client": "...",
                            "tls_offload": "..."
                        }
                    }
        """
        ...

    def load_libraries(self): # -> None:
        ...

    def set_up_custom_key(self): # -> None:
        ...

    def should_use_provider(self): # -> bool:
        ...

    def attach_to_ssl_context(self, ctx): # -> None:
        ...
