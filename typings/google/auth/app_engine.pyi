"""
This type stub file was generated by pyright.
"""

from google.auth import _helpers
from google.auth import credentials
from google.auth import crypt

"""Google App Engine standard environment support.

This module provides authentication and signing for applications running on App
Engine in the standard environment using the `App Identity API`_.


.. _App Identity API:
    https://cloud.google.com/appengine/docs/python/appidentity/
"""
class Signer(crypt.Signer):
    """Signs messages using the App Engine App Identity service.

    This can be used in place of :class:`google.auth.crypt.Signer` when
    running in the App Engine standard environment.
    """
    @property
    def key_id(self): # -> None:
        """Optional[str]: The key ID used to identify this private key.

        .. warning::
           This is always ``None``. The key ID used by App Engine can not
           be reliably determined ahead of time.
        """
        ...

    @_helpers.copy_docstring(crypt.Signer)
    def sign(self, message):
        ...



def get_project_id():
    """Gets the project ID for the current App Engine application.

    Returns:
        str: The project ID

    Raises:
        google.auth.exceptions.OSError: If the App Engine APIs are unavailable.
    """
    ...

class Credentials(credentials.Scoped, credentials.Signing, credentials.CredentialsWithQuotaProject):
    """App Engine standard environment credentials.

    These credentials use the App Engine App Identity API to obtain access
    tokens.
    """
    def __init__(self, scopes=..., default_scopes=..., service_account_id=..., quota_project_id=...) -> None:
        """
        Args:
            scopes (Sequence[str]): Scopes to request from the App Identity
                API.
            default_scopes (Sequence[str]): Default scopes passed by a
                Google client library. Use 'scopes' for user-defined scopes.
            service_account_id (str): The service account ID passed into
                :func:`google.appengine.api.app_identity.get_access_token`.
                If not specified, the default application service account
                ID will be used.
            quota_project_id (Optional[str]): The project ID used for quota
                and billing.

        Raises:
            google.auth.exceptions.OSError: If the App Engine APIs are unavailable.
        """
        ...

    @_helpers.copy_docstring(credentials.Credentials)
    def refresh(self, request): # -> None:
        ...

    @property
    def service_account_email(self):
        """The service account email."""
        ...

    @property
    def requires_scopes(self): # -> bool:
        """Checks if the credentials requires scopes.

        Returns:
            bool: True if there are no scopes set otherwise False.
        """
        ...

    @_helpers.copy_docstring(credentials.Scoped)
    def with_scopes(self, scopes, default_scopes=...): # -> Self:
        ...

    @_helpers.copy_docstring(credentials.CredentialsWithQuotaProject)
    def with_quota_project(self, quota_project_id): # -> Self:
        ...

    @_helpers.copy_docstring(credentials.Signing)
    def sign_bytes(self, message):
        ...

    @property
    @_helpers.copy_docstring(credentials.Signing)
    def signer_email(self):
        ...

    @property
    @_helpers.copy_docstring(credentials.Signing)
    def signer(self): # -> Signer:
        ...
