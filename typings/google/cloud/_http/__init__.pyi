"""
This type stub file was generated by pyright.
"""

from typing import Optional

"""Shared implementation of connections to API servers."""
API_BASE_URL = ...
DEFAULT_USER_AGENT = ...
CLIENT_INFO_HEADER = ...
CLIENT_INFO_TEMPLATE = ...
_USER_AGENT_ALL_CAPS_DEPRECATED = ...
_EXTRA_HEADERS_ALL_CAPS_DEPRECATED = ...
_DEFAULT_TIMEOUT = ...
class Connection:
    """A generic connection to Google Cloud Platform.

    :type client: :class:`~google.cloud.client.Client`
    :param client: The client that owns the current connection.

    :type client_info: :class:`~google.api_core.client_info.ClientInfo`
    :param client_info: (Optional) instance used to generate user agent.
    """
    _user_agent = ...
    def __init__(self, client, client_info=...) -> None:
        ...

    @property
    def USER_AGENT(self): # -> str:
        """Deprecated:  get / set user agent sent by connection.

        :rtype: str
        :returns: user agent
        """
        ...

    @USER_AGENT.setter
    def USER_AGENT(self, value): # -> None:
        ...

    @property
    def user_agent(self): # -> str:
        """Get / set user agent sent by connection.

        :rtype: str
        :returns: user agent
        """
        ...

    @user_agent.setter
    def user_agent(self, value): # -> None:
        ...

    @property
    def extra_headers(self): # -> dict[Any, Any]:
        """Get / set extra headers sent by connection.

        :rtype: dict
        :returns: header keys / values
        """
        ...

    @extra_headers.setter
    def extra_headers(self, value): # -> None:
        ...

    @property
    def credentials(self):
        """Getter for current credentials.

        :rtype: :class:`google.auth.credentials.Credentials` or
                :class:`NoneType`
        :returns: The credentials object associated with this connection.
        """
        ...

    @property
    def http(self):
        """A getter for the HTTP transport used in talking to the API.

        Returns:
            google.auth.transport.requests.AuthorizedSession:
                A :class:`requests.Session` instance.
        """
        ...



class JSONConnection(Connection):
    """A connection to a Google JSON-based API.

    These APIs are discovery based. For reference:

        https://developers.google.com/discovery/

    This defines :meth:`api_request` for making a generic JSON
    API request and API requests are created elsewhere.

    * :attr:`API_BASE_URL`
    * :attr:`API_VERSION`
    * :attr:`API_URL_TEMPLATE`

    must be updated by subclasses.
    """
    API_BASE_URL: Optional[str] = ...
    API_BASE_MTLS_URL: Optional[str] = ...
    ALLOW_AUTO_SWITCH_TO_MTLS_URL = ...
    API_VERSION: Optional[str] = ...
    API_URL_TEMPLATE: Optional[str] = ...
    def get_api_base_url_for_mtls(self, api_base_url=...): # -> str | None:
        """Return the api base url for mutual TLS.

        Typically, you shouldn't need to use this method.

        The logic is as follows:

        If `api_base_url` is provided, just return this value; otherwise, the
        return value depends `GOOGLE_API_USE_MTLS_ENDPOINT` environment variable
        value.

        If the environment variable value is "always", return `API_BASE_MTLS_URL`.
        If the environment variable value is "never", return `API_BASE_URL`.
        Otherwise, if `ALLOW_AUTO_SWITCH_TO_MTLS_URL` is True and the underlying
        http is mTLS, then return `API_BASE_MTLS_URL`; otherwise return `API_BASE_URL`.

        :type api_base_url: str
        :param api_base_url: User provided api base url. It takes precedence over
                             `API_BASE_URL` and `API_BASE_MTLS_URL`.

        :rtype: str
        :returns: The api base url used for mTLS.
        """
        ...

    def build_api_url(self, path, query_params=..., api_base_url=..., api_version=...): # -> str:
        """Construct an API url given a few components, some optional.

        Typically, you shouldn't need to use this method.

        :type path: str
        :param path: The path to the resource (ie, ``'/b/bucket-name'``).

        :type query_params: dict or list
        :param query_params: A dictionary of keys and values (or list of
                             key-value pairs) to insert into the query
                             string of the URL.

        :type api_base_url: str
        :param api_base_url: The base URL for the API endpoint.
                             Typically you won't have to provide this.

        :type api_version: str
        :param api_version: The version of the API to call.
                            Typically you shouldn't provide this and instead
                            use the default for the library.

        :rtype: str
        :returns: The URL assembled from the pieces provided.
        """
        ...

    def api_request(self, method, path, query_params=..., data=..., content_type=..., headers=..., api_base_url=..., api_version=..., expect_json=..., _target_object=..., timeout=..., extra_api_info=...):
        """Make a request over the HTTP transport to the API.

        You shouldn't need to use this method, but if you plan to
        interact with the API using these primitives, this is the
        correct one to use.

        :type method: str
        :param method: The HTTP method name (ie, ``GET``, ``POST``, etc).
                       Required.

        :type path: str
        :param path: The path to the resource (ie, ``'/b/bucket-name'``).
                     Required.

        :type query_params: dict or list
        :param query_params: A dictionary of keys and values (or list of
                             key-value pairs) to insert into the query
                             string of the URL.

        :type data: str
        :param data: The data to send as the body of the request. Default is
                     the empty string.

        :type content_type: str
        :param content_type: The proper MIME type of the data provided. Default
                             is None.

        :type headers: dict
        :param headers: extra HTTP headers to be sent with the request.

        :type api_base_url: str
        :param api_base_url: The base URL for the API endpoint.
                             Typically you won't have to provide this.
                             Default is the standard API base URL.

        :type api_version: str
        :param api_version: The version of the API to call.  Typically
                            you shouldn't provide this and instead use
                            the default for the library.  Default is the
                            latest API version supported by
                            google-cloud-python.

        :type expect_json: bool
        :param expect_json: If True, this method will try to parse the
                            response as JSON and raise an exception if
                            that cannot be done.  Default is True.

        :type _target_object: :class:`object`
        :param _target_object:
            (Optional) Protected argument to be used by library callers. This
            can allow custom behavior, for example, to defer an HTTP request
            and complete initialization of the object at a later time.

        :type timeout: float or tuple
        :param timeout: (optional) The amount of time, in seconds, to wait
            for the server response.

            Can also be passed as a tuple (connect_timeout, read_timeout).
            See :meth:`requests.Session.request` documentation for details.

        :type extra_api_info: string
        :param extra_api_info: (optional) Extra api info to be appended to
            the X-Goog-API-Client header

        :raises ~google.cloud.exceptions.GoogleCloudError: if the response code
            is not 200 OK.
        :raises ValueError: if the response content type is not JSON.
        :rtype: dict or str
        :returns: The API response payload, either as a raw string or
                  a dictionary if the response is valid JSON.
        """
        ...
