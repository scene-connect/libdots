[project]
name = "libdots"
version = "1.7.0a5"
description = "Libary for the DOTS simulation services"
authors = [{name="Dolf Andringa",email="dolfandringa@gmail.com"}]
readme = "README.md"
license = "Apache-2.0"
license-files = ["LICENSE.txt"]
packages = [{include = "libdots", from = "src"}]

[project.urls]
repository = "https://github.com/scene-connect/libdots.git"
issues = "https://github.com/scene-connect/libdots/issues"
documentation = "https://libdots.readthedocs.io/"
homepage = "https://libdots.readthedocs.io/"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"
poethepoet = ">=0.32.2"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
httpx = "^0.28.1"
tenacity = "^9.0.0"
google-cloud = {version = "^0.34.0"}
google-cloud-storage = {version = "^2.19.0"}
pandera = "*"
polars = "^1.20.0"
overrides = "^7.7.0"
paho-mqtt = "^2.1.0"
pyesdl = "^24.11.2"
influxdb = ">=5.3.1,<5.4.0"
pydantic-settings = {extras = ["dotenv"], version = "^2.7.1"}

[tool.poetry.group.dev.dependencies]
black = ">=23.7.0"
pre-commit = ">=3.3.3"
pyright = ">=1.1.320"
pytest = ">=7.4.0"
pytest-cov = ">=4.1.0"
pytest-mock = ">=3.11.1"
ruff = ">=0.0.283"
pyupgrade = "^3.19.1"
isort = "^5.13.2"
respx = "^0.22.0"
grpcio-tools = "^1.69.0"
types-protobuf = "^5.29.1.20241207"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^8.1.3"
sphinx-rtd-theme = "^3.0.2"
sphinx-notfound-page = "^1.1.0"
sphinx-autodoc-typehints = "^3.0.1"

[tool.poe]
poetry_command = ""

[tool.poe.tasks]
build-docs = "sphinx-build -M html docs/ docs/_build/"

[tool.pyright]
stubPath = "./typings"
reportImportCycles = false
typeCheckingMode = "strict"
venv = ".venv"
venvPath = "."
exclude = [
    "./typings/*",
    "**/node_modules",
    "**/__pycache__",
    "**/.*",
]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--cov",
    "--ignore=package",
    "--ignore=dist"
]

[tool.coverage.run]
branch = true
omit = ["./src/libdots/io/messages/*_pb2.py"]
source = ["./src/libdots"]

[tool.coverage.report]
exclude_also = [
    "if .*TYPE_CHECKING:",
    "@overload",
    "@typing.overload",
    "@abstractmethod",
    "@abc.abstractmethod",
]
fail_under = 50 # a lot of the original code wasn't unittested tested. Tests were added but not enough.
show_missing = true

[tool.ruff.lint]
# Ignore max line length - black will handle this and it's okay to go over somtimes.
ignore = ["E501"]

[tool.ruff]
extend-exclude = [
    "typings/*",
    ".poetry/*",
]

[tool.black]
extend_exclude = "^/(typings|.poetry)/.*$"

[tool.isort]
profile = "black"
force_single_line = "true"
extend_skip_glob = [
    "typings/*",
    ".poetry/*",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
